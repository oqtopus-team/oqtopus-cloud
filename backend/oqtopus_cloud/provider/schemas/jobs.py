# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-10-10T01:16:40+00:00
#   version:   0.25.9

from __future__ import annotations

from typing import Annotated, Literal, Union
from uuid import UUID

from pydantic import BaseModel, Field, RootModel


class InternalJobStatus(
    RootModel[
        Literal["submitted", "ready", "running", "success", "failed", "cancelled"]
    ]
):
    root: Annotated[
        Literal["submitted", "ready", "running", "success", "failed", "cancelled"],
        Field(examples=["submitted"]),
    ]


class JobInfo(RootModel[str]):
    root: Annotated[
        str,
        Field(
            examples=[
                "{'code': '{type: string, example: \"OPENQASM 3; qubit[2] q; bit[2] c; h q[0]; cnot q[0], q[1]; c = measure q;\"}', 'Operator': 'X 0 Y 1 Z 5 I 2', 'result': {'00': 5020, '11': 4980}, 'transpiled_code': '', 'reason': ''}"
            ]
        ),
    ]


class JobStatusUpdate(BaseModel):
    status: Annotated[Literal["running"], Field(examples=["running"])]


class JobStatusUpdateResponse(BaseModel):
    message: str


class InternalFetchableJobStatus(RootModel[Literal["queued", "cancelling"]]):
    root: Annotated[Literal["queued", "cancelling"], Field(examples=["queued"])]


class JobId(RootModel[UUID]):
    root: Annotated[UUID, Field(examples=["7af020f6-2e38-4d70-8cf0-4349650ea08c"])]


class UnfetchedJobsResponse(RootModel[list[Union[JobInfo, JobId]]]):
    root: list[Union[JobInfo, JobId]]
