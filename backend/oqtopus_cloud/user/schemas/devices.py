# generated by datamodel-codegen:
#   filename:  openapi.yaml

from __future__ import annotations

from typing import Annotated, Literal, Optional

from pydantic import AwareDatetime, BaseModel, Field


class CalibrationData(BaseModel):
    """
    Calibration data available only for 'QPU' devices
    """

    qubitConnectivity: Annotated[
        Optional[list[str]], Field(None, examples=[["(1,4)", "(4,5)", "(5,8)"]])
    ]
    t1: Annotated[
        Optional[dict[str, float]],
        Field(None, examples=[{"0": 55.51, "1": 37.03, "2": 57.13}]),
    ]
    t2: Annotated[
        Optional[dict[str, float]],
        Field(None, examples=[{"0": 99.31, "1": 111.03, "2": 30.12}]),
    ]
    roError: Annotated[
        Optional[dict[str, float]],
        Field(None, examples=[{"0": 0.0467, "1": 0.18, "2": 0.355}]),
    ]
    gateError: Annotated[
        Optional[dict[str, dict[str, float]]],
        Field(None, examples=[{"sx": {"0": 0.00692, "1": 0.00296, "2": 0.072}}]),
    ]
    measProb0As1: Annotated[
        Optional[dict[str, float]],
        Field(None, examples=[{"0": 0.00608, "1": 0.012, "2": 0.248}]),
    ]
    measProb1As0: Annotated[
        Optional[dict[str, float]],
        Field(None, examples=[{"0": 0.0281, "1": 0.386, "2": 0.0811}]),
    ]
    gateDuration: Annotated[
        Optional[dict[str, dict[str, float]]],
        Field(None, examples=[{"sx": {"0": 29.3, "1": 50.9, "2": 45.4}}]),
    ]


class DeviceInfo(BaseModel):
    deviceId: Annotated[str, Field(examples=["SVSim"])]
    deviceType: Annotated[Literal["QPU", "simulator"], Field(examples=["simulator"])]
    status: Annotated[
        Literal["AVAILABLE", "NOT_AVAILABLE"], Field(examples=["AVAILABLE"])
    ]
    restartAt: Annotated[
        Optional[AwareDatetime], Field(None, examples=["2022-10-19T11:45:34+09:00"])
    ]
    """
    Parameter mandatory and valid for 'NOT_AVAILABLE' devices
    """
    nPendingTasks: Annotated[int, Field(examples=[8])]
    nQubits: Annotated[Optional[int], Field(None, examples=[39])]
    nNodes: Annotated[Optional[int], Field(None, examples=[512])]
    """
    Parameter valid only for 'simulator' devices
    """
    basisGates: Annotated[
        list[str],
        Field(
            examples=[
                [
                    "x",
                    "y",
                    "z",
                    "h",
                    "s",
                    "sdg",
                    "t",
                    "tdg",
                    "rx",
                    "ry",
                    "rz",
                    "cx",
                    "cz",
                    "swap",
                    "u1",
                    "u2",
                    "u3",
                    "u",
                    "p",
                    "id",
                    "sx",
                    "sxdg",
                ]
            ]
        ),
    ]
    supportedInstructions: Annotated[
        list[str], Field(examples=[["measure", "barrier", "reset"]])
    ]
    calibrationData: Optional[CalibrationData] = None
    calibratedAt: Annotated[
        Optional[AwareDatetime], Field(None, examples=["2022-10-19T11:45:34+09:00"])
    ]
    """
    Parameter available only for 'QPU' devices with available calibration data
    """
    description: Annotated[
        str, Field(examples=["State vector-based quantum circuit simulator"])
    ]
