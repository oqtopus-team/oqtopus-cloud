# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-10-14T08:42:24+00:00
#   version:   0.25.9

from __future__ import annotations

from typing import Annotated, Literal, Optional

from pydantic import AwareDatetime, BaseModel, Field


class DeviceInfo(BaseModel):
    device_id: Annotated[Optional[str], Field(None, examples=["SVSim"])]
    device_type: Annotated[
        Optional[Literal["QPU", "simulator"]], Field(None, examples=["simulator"])
    ]
    status: Annotated[
        Literal["available", "unavailable"], Field(examples=["available"])
    ]
    available_at: Annotated[
        Optional[AwareDatetime], Field(None, examples=["2022-10-19T11:45:34+09:00"])
    ]
    """
    Parameter mandatory and valid for 'unavailable' devices
    """
    n_pending_jobs: Annotated[Optional[int], Field(None, examples=[8])]
    n_qubits: Annotated[Optional[int], Field(None, examples=[39])]
    basis_gates: Annotated[
        Optional[list[str]],
        Field(
            None,
            examples=[
                [
                    "x",
                    "y",
                    "z",
                    "h",
                    "s",
                    "sdg",
                    "t",
                    "tdg",
                    "rx",
                    "ry",
                    "rz",
                    "cx",
                    "cz",
                    "swap",
                    "u1",
                    "u2",
                    "u3",
                    "u",
                    "p",
                    "id",
                    "sx",
                    "sxdg",
                ]
            ],
        ),
    ]
    supported_instructions: Annotated[
        Optional[list[str]], Field(None, examples=[["measure", "barrier", "reset"]])
    ]
    device_info: Annotated[
        Optional[str],
        Field(
            None,
            examples=[
                "{'n_nodes': 512, 'calibration_data': {'qubit_connectivity': ['(1,4)', '(4,5)', '(5,8)'], 't1': {'0': 55.51, '1': 37.03, '2': 57.13}}"
            ],
        ),
    ]
    """
    json format calibration_data and n_nodes etc
    """
    calibrated_at: Annotated[
        Optional[AwareDatetime], Field(None, examples=["2022-10-19T11:45:34+09:00"])
    ]
    """
    Parameter available only for 'QPU' devices with available calibration data
    """
    description: Annotated[
        str, Field(examples=["State vector-based quantum circuit simulator"])
    ]
