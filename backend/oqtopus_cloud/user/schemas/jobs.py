# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2024-10-09T08:20:49+00:00
#   version:   0.25.9

from __future__ import annotations

from typing import Annotated, Literal, Optional
from uuid import UUID

from pydantic import AwareDatetime, BaseModel, Field, RootModel


class JobInfo(RootModel[str]):
    root: Annotated[
        str,
        Field(
            examples=[
                "{'code': '{type: string, example: \"OPENQASM 3; qubit[2] q; bit[2] c; h q[0]; cnot q[0], q[1]; c = measure q;\"}', 'Operator': 'X 0 Y 1 Z 5 I 2'}"
            ]
        ),
    ]


class JobId(RootModel[UUID]):
    root: Annotated[UUID, Field(examples=["7af020f6-2e38-4d70-8cf0-4349650ea08c"])]


class TranspilerInfo(RootModel[str]):
    root: Annotated[
        str,
        Field(
            examples=[
                "{'qubitAllocation': {'0': 12, '1': 16}, 'skipTranspilation': false, 'seedTranspilation': 873}"
            ]
        ),
    ]


class SimulatorInfo(RootModel[str]):
    root: Annotated[
        str,
        Field(
            examples=[
                "{'nQubits': 5, 'nNodes': 12, 'nPerNode': 2, 'seedSimulation': 39058567, 'simulationOpt': {'optimizationMethod': 'light', 'optimizationBlockSize': 1, 'optimizationSwapLevel': 1}}"
            ]
        ),
    ]


class MitigationInfo(RootModel[str]):
    root: Annotated[str, Field(examples=["{'roErrorMitigation': 'pseudo_inverse'}"])]


class JobStatus(
    RootModel[
        Literal["submitted", "ready", "running", "success", "failed", "cancelled"]
    ]
):
    root: Annotated[
        Literal["submitted", "ready", "running", "success", "failed", "cancelled"],
        Field(examples=["submitted"]),
    ]


class JobDef(BaseModel):
    jobId: Optional[JobId] = None
    description: Annotated[Optional[str], Field(None, examples=["Bell State Sampling"])]
    note: Annotated[
        Optional[str], Field(None, examples=["Bell State Sampling Example"])
    ]
    device: Annotated[str, Field(examples=["Kawasaki"])]
    nShots: Annotated[int, Field(examples=["1000"], ge=1, le=10000000)]
    jobInfo: Optional[JobInfo] = None
    transpilerInfo: Optional[TranspilerInfo] = None
    simulatorInfo: Optional[SimulatorInfo] = None
    mitigationInfo: Optional[MitigationInfo] = None
    status: JobStatus
    createdAt: Annotated[AwareDatetime, Field(examples=["2022-10-19T11:45:34+09:00"])]


class SubmitJobResponse(BaseModel):
    """
    submit a job
    """

    jobId: JobId


class GetJobStatusResponse(BaseModel):
    """
    job status
    """

    jobId: JobId
    status: JobStatus
