tasks:
  get:
    tags:
      - tasks
    summary: Search tasks for a device
    description: Search tasks for a device
    operationId: gettasks
    security: []
    parameters:
        - in: query
          name: deviceId
          required: true
          description: "Device identifier"
          schema: {type: string, example: "Kawasaki"}
        - in: query
          name: status
          description: "Additional search parameter:<br/> Search tasks with specified status only"
          schema:
            $ref: "../schemas/tasks.yaml#/tasks.InternalTaskStatus"
        - in: query
          name: maxResults
          description: "Additional search parameter:<br/> Set max number of quantum tasks to return in single request"
          schema: {type: integer, example: 1}
        - in: query
          name: timestamp
          description: "Additional search parameter:<br/> Fetch tasks created after the specified timetsamp"
          schema: {type: string, example: '2022-12-15 15:54:46'}
    responses:
      "200":
        description: "List of tasks for a device"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../schemas/tasks.yaml#/tasks.TaskInfo"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/error.BadRequest'
            example:
              detail: Bad request malformed input data
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/error.InternalServerError'
            example:
              detail: Internal server error

tasks.taskId:
  get:
    summary: Get a task by ID
    description: Get a task by ID
    operationId: getTask
    security: []
    tags:
    - tasks
    parameters:
        - in: path
          name: taskId
          required: true
          description: "Task identifier"
          schema: {type: string}
    responses:
      "200":
        description: "Return quantum task"
        content:
          application/json:
            schema:
              $ref: "../schemas/tasks.yaml#/tasks.TaskInfo"
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/error.BadRequest'
            example:
              detail: Bad request malformed input data
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/error.NotFoundError'
            example:
              detail: task not found
  patch:
    summary: "Modify selected quantum task (update status)."
    description: "Used by device to set task status to \"RUNNING\".<br/>Other statuses are set by CloudAPI automatically when result is created"
    operationId: patchTask
    security: []
    tags:
      - tasks
    parameters:
        - in: path
          name: taskId
          required: true
          description: "Task identifier"
          schema: {type: string}
    requestBody:
      description: "New task status. "
      content:
        application/json:
          schema:
            $ref: "../schemas/tasks.yaml#/tasks.TaskStatusUpdate"
    responses:
      '200':
        description: task data updated
        content:
          application/json:
            schema:
              $ref: '../schemas/tasks.yaml#/tasks.TaskStatusUpdateResponse'
            example:
              message: task data updated
      "400":
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/error.BadRequest'
            example:
              detail: Bad request malformed input data
      "404":
        description: Not Found
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/error.NotFoundError'
            example:
              detail: task not found

tasks.unfetched:
  get:
    summary: "Fetch tasks for device"
    description: "Fetches tasks for execution/cancel<br/><br/>Operation is valid only for task with status: QUEUED or CANCELLING. After the operation task status is changed to appropriate FETCHED state (QUEUED_FETCHED or CANCELLING_FETCHED)"
    operationId: getUnfetchedTasks
    security: []
    tags:
    - tasks
    parameters:
      - in: query
        name: deviceId
        required: true
        description: "Device identifier"
        schema: {type: string, example: "Kawasaki"}
      - in: query
        name: status
        required: true
        description: "Fetch tasks with specified status"
        schema:
          $ref: "../schemas/tasks.yaml#/tasks.InternalFetchableTaskStatus"
      - in: query
        name: maxResults
        description: "Additional search parameter:<br/> Set max number of quantum tasks to return in single request"
        schema: {type: integer, example: 1}

    responses:
      "200":
        description: "List of tasks for execution (all task data) / cancel (taskIds only)"
        content:
          application/json:
            schema:
              $ref: "../schemas/tasks.yaml#/tasks.UnfetchedTasksResponse"
      "400":
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '../schemas/error.yaml#/error.BadRequest'
            example:
              detail: Bad request malformed input data
