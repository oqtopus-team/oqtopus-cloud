devices.DeviceInfo:
  type: object
  properties:
    deviceId:
      type: string
      example: "SVSim"
    deviceType:
      type: string
      enum: ["QPU", "simulator"]
      example: "simulator"
    status:
      type:
        string
      enum:
        ["AVAILABLE", "NOT_AVAILABLE"]
      example: "AVAILABLE"
    restartAt:
      description: "Parameter mandatory and valid for 'NOT_AVAILABLE' devices"
      type: string
      format: date-time
      example: "2022-10-19T11:45:34+09:00"
    nPendingTasks:
      type: integer
      example: 8
    nQubits:
      type: integer
      example: 39
    nNodes:
      description: "Parameter valid only for 'simulator' devices"
      type: integer
      example: 512
    basisGates:
      type: array
      items:
        type: string
      example: ["x", "y", "z", "h", "s", "sdg", "t", "tdg", "rx", "ry", "rz", "cx", "cz", "swap", "u1", "u2", "u3", "u", "p", "id", "sx", "sxdg"]
    supportedInstructions:
      type: array
      items:
        type: string
      example: ["measure", "barrier", "reset"]
    calibrationData:
      $ref: "#/devices.CalibrationData"
    calibratedAt:
      description: "Parameter available only for 'QPU' devices with available calibration data"
      type: string
      format: date-time
      example: "2022-10-19T11:45:34+09:00"
    description:
      type: string
      example: "State vector-based quantum circuit simulator"
  required: [
    deviceId, deviceType, status, nPendingTasks, basisGates, supportedInstructions, description
  ]
  example:
    - deviceId: "SVSim"
      deviceType: "simulator"
      status: "AVAILABLE"
      nPendingTasks: 8
      nQubits: 39
      nNodes: 512
      basisGates: ["x", "y", "z", "h", "s", "sdg", "t", "tdg", "rx", "ry", "rz", "cx", "cz", "swap", "u1", "u2", "u3", "u", "p", "id", "sx", "sxdg"]
      supportedInstructions: ["measure", "barrier", "reset"]
      description: "State vector-based quantum circuit simulator"

devices.CalibrationData:
  description: "Calibration data available only for 'QPU' devices"
  type: object
  properties:
    qubitConnectivity:
      type: array
      items:
        type: string
        format: "(number, number)"
      example:
        ["(1,4)", "(4,5)", "(5,8)"]
    t1:
      type: object
      additionalProperties:
        type: number
        format: float
      example:
        {"0": 55.51, "1": 37.03, "2": 57.13}
    t2:
      type: object
      additionalProperties:
        type: number
        format: float
      example:
        {"0": 99.31, "1": 111.03, "2": 30.12}
    roError:
      type: object
      additionalProperties:
        type: number
        format: float
      example:
        {"0": 4.67e-2, "1": 1.8e-1, "2": 3.55e-1}
    gateError:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: number
          format: float
      example:
        {"sx": {"0": 6.92e-3, "1": 2.96e-3, "2": 7.2e-2}}
    measProb0As1:
      type: object
      additionalProperties:
        type: number
        format: float
      example:
        {"0": 6.08e-3, "1": 1.2e-2, "2": 2.48e-1}
    measProb1As0:
      type: object
      additionalProperties:
        type: number
        format: float
      example:
        {"0": 2.81e-2, "1": 3.86e-1, "2": 8.11e-2}
    gateDuration:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: number
          format: float
      example:
        {"sx": {"0": 29.3, "1": 50.9, "2": 45.4}}
