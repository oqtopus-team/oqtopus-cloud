openapi: 3.0.1
info:
  title: OQTOPUS Cloud User API
  version: '1.0'
  contact:
    name: oqtopus-team
    email: oqtopus-team[at]googlegroups.com
  description: OQTOPUS Cloud User API. This API is used to interact with the OQTOPUS Cloud service. The API provides endpoints to manage devices, jobs, and results.
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
    description: Local server url
paths:
  /devices:
    get:
      tags:
        - device
      summary: List available devices
      description: List available devices
      operationId: listDevices
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Returns a list of available devices
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/devices.DeviceInfo'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UnauthorizedError'
              example:
                detail: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.InternalServerError'
  /devices/{device_id}:
    get:
      tags:
        - device
      summary: Get specified device details
      description: get device
      operationId: getDevice
      security:
        - BearerAuth: []
      parameters:
        - name: device_id
          in: path
          description: Device identifier
          required: true
          schema:
            type: string
          example: Kawasaki
      responses:
        '200':
          description: job response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/devices.DeviceInfo'
        '404':
          description: Device with deviceId not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NotFoundError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.InternalServerError'
  /jobs:
    get:
      tags:
        - job
      summary: List all quantum jobs
      description: List all quantum jobs
      operationId: listJobs
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Return a list of submitted quantum jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/jobs.JobDef'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UnauthorizedError'
              example:
                detail: Unauthorized
    post:
      tags:
        - job
      summary: Submit a quantum job
      description: Submit a quantum job
      operationId: submitJob
      security:
        - BearerAuth: []
      requestBody:
        description: Quantum job to be submitted
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/jobs.JobDef'
            examples:
              simulator:
                description: Simulator example
                value:
                  name: Bell State Sampling
                  description: Bell State Sampling Example
                  device_id: Kawasaki
                  job_info: '{''code'': ''{type: string, example: "OPENQASM 3; qubit[2] q; bit[2] c; h q[0]; cnot q[0], q[1]; c = measure q;"}'', ''operator'': ''X 0 Y 1 Z 5 I 2'', ''result'': {''00'': 5020, ''11'': 4980}, ''transpiled_code'': '''', ''reason'': ''''}'
                  transpiler_info: ''
                  simulator_info: '{''n_qubits'': 5, ''n_nodes'': 12, ''n_per_node'': 2, ''seed_simulation'': 39058567, ''simulation_opt'': {''optimization_method'': ''light'', ''optimization_block_size'': 1, ''optimization_swap_level'': 1}}'
                  mitigation_info: ''
                  job_type: sampling
                  shots: 1000
                  status: submitted
                  created_at: '2022-10-19T11:45:34+09:00'
                  updated_at: '2022-10-19T11:45:34+09:00'
              qpu:
                description: QPU example
                value:
                  name: Bell State Sampling
                  description: Bell State Sampling Example
                  device_id: Kawasaki
                  job_info: '{''code'': ''{type: string, example: "OPENQASM 3; qubit[2] q; bit[2] c; h q[0]; cnot q[0], q[1]; c = measure q;"}'', ''operator'': ''X 0 Y 1 Z 5 I 2'', ''result'': {''00'': 5020, ''11'': 4980}, ''transpiled_code'': '''', ''reason'': ''''}'
                  transpiler_info: '{''qubit_allocation'': {''0'': 12, ''1'': 16}, ''skip_transpilation'': false, ''seed_transpilation'': 873}'
                  simulator_info: ''
                  mitigation_info: '{''ro_error_mitigation'': ''pseudo_inverse''}'
                  job_type: sampling
                  shots: 1000
                  status: submitted
                  created_at: '2022-10-19T11:45:34+09:00'
                  updated_at: '2022-10-19T11:45:34+09:00'
      responses:
        '200':
          description: Job submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobs.SubmitJobResponse'
              example:
                job_id: 7af020f6-2e38-4d70-8cf0-4349650ea08c
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BadRequest'
              example:
                detail: Bad request malformed input data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UnauthorizedError'
              example:
                detail: Unauthorized
  /jobs/{job_id}:
    get:
      tags:
        - job
      summary: Get selected job
      description: Get selected job
      operationId: getSamplingJob
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: job_id
          required: true
          description: Job identifier
          schema:
            type: string
      responses:
        '200':
          description: Return quantum job
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobs.JobDef'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BadRequest'
              example:
                detail: Bad request malformed input data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UnauthorizedError'
              example:
                detail: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NotFoundError'
              example:
                detail: job not found
    delete:
      tags:
        - job
      summary: Delete job
      description: 'Deletes quantum job and related result<br/><br/>Operation is valid only for job with status: COMPLETED, FAILED and CANCELLED. submitted and RUNNING jobs must be cancelled before deletion.'
      operationId: deleteSamplingJob
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: job_id
          required: true
          description: Job identifier
          schema:
            type: string
      responses:
        '200':
          description: Quantum job deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success.SuccessResponse'
              example:
                message: Quantum job deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BadRequest'
              example:
                detail: Bad request malformed input data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UnauthorizedError'
              example:
                detail: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NotFoundError'
              example:
                detail: job not found
  /jobs/{job_id}/status:
    get:
      tags:
        - job
      summary: Get selected job's status
      description: Get selected job's status
      operationId: getSamplingJobStatus
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: job_id
          required: true
          description: Job identifier
          schema:
            type: string
      responses:
        '200':
          description: Return quantum job status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/jobs.GetJobStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BadRequest'
              example:
                detail: Bad request malformed input data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UnauthorizedError'
              example:
                detail: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NotFoundError'
              example:
                detail: job not found
  /jobs/{job_id}/cancel:
    post:
      tags:
        - job
      summary: Cancel job
      description: 'Start a procedure to cancel quantum job.<br/><br/> Operation is valid only for job with status: submitted or RUNNING.'
      operationId: cancelSamplingJob
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: job_id
          required: true
          description: Job identifier
          schema:
            type: string
      responses:
        '200':
          description: Job cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/success.SuccessResponse'
              example:
                message: cancel request accepted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.BadRequest'
              example:
                detail: Bad request malformed input data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.UnauthorizedError'
              example:
                detail: Unauthorized
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error.NotFoundError'
              example:
                detail: job not found
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    devices.DeviceInfo:
      type: object
      properties:
        device_id:
          type: string
          example: SVSim
        device_type:
          type: string
          enum:
            - QPU
            - simulator
          example: simulator
        status:
          type: string
          enum:
            - available
            - unavailable
          example: available
        available_at:
          description: Parameter mandatory and valid for 'unavailable' devices
          type: string
          format: date-time
          example: '2022-10-19T11:45:34+09:00'
        n_pending_jobs:
          type: integer
          example: 8
        n_qubits:
          type: integer
          example: 39
        basis_gates:
          type: array
          items:
            type: string
          example:
            - x
            - 'y'
            - z
            - h
            - s
            - sdg
            - t
            - tdg
            - rx
            - ry
            - rz
            - cx
            - cz
            - swap
            - u1
            - u2
            - u3
            - u
            - p
            - id
            - sx
            - sxdg
        supported_instructions:
          type: array
          items:
            type: string
          example:
            - measure
            - barrier
            - reset
        device_info:
          description: json format calibration_data and n_nodes etc
          type: string
          example: '{''n_nodes'': 512, ''calibration_data'': {''qubit_connectivity'': [''(1,4)'', ''(4,5)'', ''(5,8)''], ''t1'': {''0'': 55.51, ''1'': 37.03, ''2'': 57.13}}'
        calibrated_at:
          description: Parameter available only for 'QPU' devices with available calibration data
          type: string
          format: date-time
          example: '2022-10-19T11:45:34+09:00'
        description:
          type: string
          example: State vector-based quantum circuit simulator
      required:
        - deviceId
        - deviceType
        - status
        - nPendingJobs
        - basisGates
        - supportedInstructions
        - description
      example:
        - device_id: SVSim
          device_type: simulator
          status: AVAILABLE
          n_pending_jobs: 8
          n_qubits: 39
          n_nodes: 512
          basis_gates:
            - x
            - 'y'
            - z
            - h
            - s
            - sdg
            - t
            - tdg
            - rx
            - ry
            - rz
            - cx
            - cz
            - swap
            - u1
            - u2
            - u3
            - u
            - p
            - id
            - sx
            - sxdg
          supported_instructions:
            - measure
            - barrier
            - reset
          device_info: '{''n_nodes'': 512, ''calibration_data'': {''qubit_connectivity'': [''(1,4)'', ''(4,5)'', ''(5,8)''], ''t1'': {''0'': 55.51, ''1'': 37.03, ''2'': 57.13}}'
          calibrated_at: '2022-10-19T11:45:34+09:00'
          description: State vector-based quantum circuit simulator
    error.UnauthorizedError:
      type: object
      properties:
        detail:
          type: string
      required:
        - detail
    error.InternalServerError:
      type: object
      properties:
        detail:
          type: string
      required:
        - detail
    error.NotFoundError:
      type: object
      properties:
        detail:
          type: string
      required:
        - detail
    jobs.JobId:
      type: string
      example: 7af020f6-2e38-4d70-8cf0-4349650ea08c
    jobs.JobInfo:
      type: string
      example: '{''code'': ''{type: string, example: "OPENQASM 3; qubit[2] q; bit[2] c; h q[0]; cnot q[0], q[1]; c = measure q;"}'', ''Operator'': ''X 0 Y 1 Z 5 I 2'', ''result'': {''00'': 5020, ''11'': 4980}, ''transpiledCode'': '''', ''reason'': ''''}'
    jobs.TranspilerInfo:
      type: string
      example: '{''qubitAllocation'': {''0'': 12, ''1'': 16}, ''skipTranspilation'': false, ''seedTranspilation'': 873}'
    jobs.SimulatorInfo:
      type: string
      example: '{''nQubits'': 5, ''nNodes'': 12, ''nPerNode'': 2, ''seedSimulation'': 39058567, ''simulationOpt'': {''optimizationMethod'': ''light'', ''optimizationBlockSize'': 1, ''optimizationSwapLevel'': 1}}'
    jobs.MitigationInfo:
      type: string
      example: '{''roErrorMitigation'': ''pseudo_inverse''}'
    jobs.JobStatus:
      type: string
      enum:
        - submitted
        - ready
        - running
        - success
        - failed
        - cancelled
      example: submitted
    jobs.JobDef:
      type: object
      properties:
        job_id:
          $ref: '#/components/schemas/jobs.JobId'
        name:
          type: string
          example: Bell State Sampling
        description:
          type: string
          example: Bell State Sampling Example
        device_id:
          type: string
          example: Kawasaki
        shots:
          type: integer
          minimum: 1
          maximum: 10000000
          example: '1000'
        job_type:
          type: string
          example: '''sampling'' or ''estimation'', ''sse'''
        job_info:
          $ref: '#/components/schemas/jobs.JobInfo'
        transpiler_info:
          $ref: '#/components/schemas/jobs.TranspilerInfo'
        simulator_info:
          $ref: '#/components/schemas/jobs.SimulatorInfo'
        mitigation_info:
          $ref: '#/components/schemas/jobs.MitigationInfo'
        status:
          $ref: '#/components/schemas/jobs.JobStatus'
        created_at:
          type: string
          format: date-time
          example: '2022-10-19T11:45:34+09:00'
        updated_at:
          type: string
          format: date-time
          example: '2022-10-19T11:45:34+09:00'
      required:
        - device_id
        - shots
        - status
        - created_at
      example:
        job_id: 7af020f6-2e38-4d70-8cf0-4349650ea08c
        name: Bell State Sampling
        description: Bell State Sampling Example
        device_id: Kawasaki
        job_info: '{''code'': ''{type: string, example: "OPENQASM 3; qubit[2] q; bit[2] c; h q[0]; cnot q[0], q[1]; c = measure q;"}'', ''Operator'': ''X 0 Y 1 Z 5 I 2'', ''result'': {''00'': 5020, ''11'': 4980}, ''transpiled_code'': '''', ''reason'': ''''}'
        transpiler_info: '{''qubit_allocation'': {''0'': 12, ''1'': 16}, ''skip_transpilation'': false, ''seed_transpilation'': 873}'
        simulator_info: '{''n_qubits'': 5, ''n_nodes'': 12, ''n_per_node'': 2, ''seed_simulation'': 39058567, ''simulation_opt'': {''optimization_method'': ''light'', ''optimization_block_size'': 1, ''optimization_swap_level'': 1}}'
        mitigation_info: '{''ro_error_mitigation'': ''pseudo_inverse''}'
        job_type: sampling
        shots: 1000
        status: submitted
        created_at: '2022-10-19T11:45:34+09:00'
        updated_at: '2022-10-19T11:45:34+09:00'
    jobs.SubmitJobResponse:
      description: submit a job
      type: object
      properties:
        job_id:
          $ref: '#/components/schemas/jobs.JobId'
      required:
        - job_id
    error.BadRequest:
      type: object
      properties:
        detail:
          type: string
      required:
        - detail
    success.SuccessResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    jobs.GetJobStatusResponse:
      description: job status
      type: object
      properties:
        job_id:
          $ref: '#/components/schemas/jobs.JobId'
        status:
          $ref: '#/components/schemas/jobs.JobStatus'
      required:
        - job_id
        - status
